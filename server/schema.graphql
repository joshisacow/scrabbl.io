type Player {
    name: String!
    hand: [String]
    score: Int
}

type GameState {
    board: [[String]]
    players: [Player]
    currentPlayerIndex: Int
    deck: [String]
    swap: Boolean
}

enum ActionType {
    PLAY
    RESIGN
    SWAP_TILES
    SKIP_TURN
}

input Action {
    action: ActionType!
    playerIndex: Int
    potentialTiles: [String]
    locations: [[Int]]
}

input Config {
    playerCount: Int
    board: Int
    playerNames: [String]
    blankTiles: Boolean
    swap: Boolean
}

type Mutation {
    createGame(config: Config!): ID
    joinGame(gameId: ID!, playerName: String!): Boolean 
    startGame(gameId: ID!): GameState
    doAction(gameId: ID!, action: Action): GameState
}